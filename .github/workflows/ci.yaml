name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-interpreter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        env:
          DOCKER_BUILDKIT: "1"
        run: |-
          set -o errexit -o nounset -o pipefail
          docker build \
            --file interpreter/Dockerfile.cpython36 \
            --tag python-interpreter:cpython36 \
            interpreter/
          docker cp $(docker create --rm python-interpreter:cpython36):/var/buildpython/cpython36.tar.gz cpython36.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: cpython36.tar.gz
          path: cpython36.tar.gz

  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Mount bazel action cache
        uses: actions/cache@v2
        with:
          path: "~/.cache/bazel"
          key: bazel
      - name: Mount bazel repo cache
        uses: actions/cache@v2
        with:
          path: "~/.cache/bazel-repo"
          key: bazel-repo
      - name: bazel test //...
        env:
          # Bazelisk will download bazel to here, ensure it is cached between runs.
          XDG_CACHE_HOME: ~/.cache/bazel-repo
        run: bazel --bazelrc=.github/workflows/ci.bazelrc --bazelrc=.bazelrc test //...
