# Make PYTHONNOUSERSITE=1 by default.
--- Python/pylifecycle.c	2021-09-04 03:49:41.000000000 +0000
+++ Python/pylifecycle.c	2021-12-22 23:28:08.001669608 +0000
@@ -89,7 +89,7 @@
 int Py_FrozenFlag; /* Needed by getpath.c */
 int Py_IgnoreEnvironmentFlag; /* e.g. PYTHONPATH, PYTHONHOME */
 int Py_DontWriteBytecodeFlag; /* Suppress writing bytecode files (*.pyc) */
-int Py_NoUserSiteDirectory = 0; /* for -s and site.py */
+int Py_NoUserSiteDirectory = 1; /* for -s and site.py */
 int Py_UnbufferedStdioFlag = 0; /* Unbuffered binary std{in,out,err} */
 int Py_HashRandomizationFlag = 0; /* for -R and PYTHONHASHSEED */
 int Py_IsolatedFlag = 0; /* for -I, isolate from user's env */

# Ensure the tests assert the new behaviour of the PYTHONNOUSERSITE=1 by
# default.
--- Lib/test/test_cmd_line.py	2021-09-04 03:49:41.000000000 +0000
+++ Lib/test/test_cmd_line.py	2021-12-22 23:46:13.556182861 +0000
@@ -472,7 +472,7 @@
             'print(f.no_user_site, f.ignore_environment, f.isolated)',
             # dummyvar to prevent extraneous -E
             dummyvar="")
-        self.assertEqual(out.strip(), b'1 1 1')
+        self.assertEqual(out.strip(), b'2 1 1')
         with test.support.temp_cwd() as tmpdir:
             fake = os.path.join(tmpdir, "uuid.py")
             main = os.path.join(tmpdir, "main.py")

--- Lib/test/test_support.py	2021-09-04 03:49:41.000000000 +0000
+++ Lib/test/test_support.py	2021-12-22 23:53:57.796216554 +0000
@@ -414,26 +414,26 @@
         # Test test.support.args_from_interpreter_flags()
         for opts in (
             # no option
-            [],
+            ['-s'],
             # single option
-            ['-B'],
+            ['-B', '-s'],
             ['-s'],
-            ['-S'],
-            ['-E'],
-            ['-v'],
-            ['-b'],
-            ['-q'],
             ['-I'],
+            ['-S', '-s'],
+            ['-E', '-s'],
+            ['-v', '-s'],
+            ['-b', '-s'],
+            ['-q', '-s'],
             # same option multiple times
-            ['-bb'],
-            ['-vvv'],
+            ['-bb', '-s'],
+            ['-vvv', '-s'],
             # -W options
-            ['-Wignore'],
+            ['-s', '-Wignore'],
             # -X options
-            ['-X', 'faulthandler'],
-            ['-X', 'showalloccount'],
-            ['-X', 'showrefcount'],
-            ['-X', 'tracemalloc'],
-            ['-X', 'tracemalloc=3'],
+            ['-s', '-X', 'faulthandler'],
+            ['-s', '-X', 'showalloccount'],
+            ['-s', '-X', 'showrefcount'],
+            ['-s', '-X', 'tracemalloc'],
+            ['-s', '-X', 'tracemalloc=3'],
         ):
             with self.subTest(opts=opts):
                 self.check_options(opts, 'args_from_interpreter_flags')
